name: Backend CI

on:
  push:
    paths: ["Backend/**"]
  pull_request:
    paths: ["Backend/**"]
  workflow_dispatch:  # to pomeni, da ročno zeženeš

jobs:
  test-backend:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      JWT_SECRET: "test-secret"  
      ADMIN_EMAIL: "admin@test.com"
      ADMIN_PWHASH: "$2b$10$mockhash"  
      FRONTEND_URL: "http://localhost:3000"
      PORT: 5100
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "Backend/package-lock.json"
      
      - name: Install dependencies
        run: cd Backend && npm ci
      
      - name: Verify environment variables
        run: |
          cd Backend
          if [ -z "$JWT_SECRET" ]; then
            echo "JWT_SECRET is not set (even for tests)"
            exit 1
          fi
          echo "Environment variables verified"
      
      - name: Run unit tests
        run: cd Backend && npm test
      
      - name: Lint code (if config exists)
        run: |
          cd Backend
          if [ -f ".eslintrc.js" ] || [ -f ".eslintrc.json" ] || [ -f "eslint.config.js" ] || [ -f "eslint.config.mjs" ] || [ -f "eslint.config.cjs" ]; then
            npx eslint .
            echo "Linting completed"
          else
            echo "No ESLint config found, skipping linting"
          fi
      
      - name: Check for sensitive data
        run: |
          cd Backend
          if grep -r --exclude-dir=node_modules --exclude-dir=test --exclude="*.test.js" --exclude="package*.json" \
            -E "(password|secret|token)\s*[:=]\s*['\"][^'\"]{8,}" --include="*.js" . | \
            grep -v "process.env" | grep -v "JWT_SECRET" | grep -v "test-secret" | grep -v "req.body"; then
            echo "Potential hardcoded secrets found in code!"
            echo "Found hardcoded values that look like secrets"
            exit 1
          else
            echo "No hardcoded secrets detected"
          fi
